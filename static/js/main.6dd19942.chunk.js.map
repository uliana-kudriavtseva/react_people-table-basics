{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navigation/Navigation.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","title","className","isActive","classNames","Navigation","role","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PeopleTable","people","activeSlug","useParams","findParent","parentName","parent","find","map","born","died","motherName","fatherName","PeoplePage","useState","setPeople","isError","setIsError","isLoading","setIsLoading","useEffect","peopleFromServer","catch","finally","length","HomePage","NotFoundPage","App","path","index","element","replace","createRoot","document","getElementById","render"],"mappings":"qQASaA,EAA+B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjD,OACE,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,8BAA+BD,GAFxB,EAFb,SAOGF,GAGN,ECnBYI,EAAuB,kBAClC,qBACE,UAAQ,MACRH,UAAU,iCACVI,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKJ,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaF,GAAG,IAAIC,MAAM,SAC1B,cAAC,EAAD,CAAaD,GAAG,SAASC,MAAM,iBAVH,E,OCO7B,SAASM,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,UCZYQ,EAAS,kBACpB,qBAAKd,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECOTe,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,cAAC,IAAD,CACElB,GAAE,kBAAakB,EAAOC,MACtBjB,UAAWE,IAAW,CAAE,kBAAkC,MAAfc,EAAOE,MAFpD,SAIGF,EAAOG,MAL+B,ECC9BC,EAA+B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC/BC,EAAeC,cAArBN,KAEFO,EAAa,SAACC,GAClB,IAAMC,EAASL,EAAOM,MAAK,SAAAX,GAAM,OAAIA,EAAOG,OAASM,CAApB,IAEjC,OAAOC,EACH,cAAC,EAAD,CAAYV,OAAQU,IACpBD,GAAc,GACnB,EAED,OACE,wBACE,UAAQ,cACRzB,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGqB,EAAOO,KAAI,SAAAZ,GACV,IACEE,EACEF,EADFE,IAAKW,EACHb,EADGa,KAAMC,EACTd,EADSc,KAAMC,EACff,EADee,WAAYC,EAC3BhB,EAD2BgB,WAAYf,EACvCD,EADuCC,KAG3C,OACE,qBACE,UAAQ,SACRjB,UAAWE,IACT,CAAE,yBAA0Be,IAASK,IAHzC,UAOE,6BACE,cAAC,EAAD,CAAYN,OAAQA,MAGtB,6BAAKE,IACL,6BAAKW,IACL,6BAAKC,IACL,6BAAKN,EAAWO,KAChB,6BAAKP,EAAWQ,OAVXhB,EAAOC,KAajB,QAIR,EC5DYgB,EAAa,WACxB,MAA4BC,mBAAmB,IAA/C,mBAAOb,EAAP,KAAec,EAAf,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAWA,OATAC,qBAAU,WACRD,GAAa,GAEblC,IACGK,MAAK,SAAA+B,GAAgB,OAAIN,EAAUM,EAAd,IACrBC,OAAM,kBAAML,GAAW,EAAjB,IACNM,SAAQ,kBAAMJ,GAAa,EAAnB,GACZ,GAAE,IAGD,qCACE,oBAAIvC,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGsC,GACC,cAAC,EAAD,IAGDF,GACC,mBAAG,UAAQ,qBAAqBpC,UAAU,kBAA1C,mCAKCoC,IAAYf,EAAOuB,SAAWN,GAC/B,mBAAG,UAAQ,kBAAX,iDAKCjB,EAAOuB,QACR,cAAC,EAAD,CAAavB,OAAQA,WAMhC,ECjDYwB,EAAW,kBACtB,oBAAI7C,UAAU,QAAd,sBADsB,ECAX8C,EAAe,kBAC1B,oBAAI9C,UAAU,QAAd,2BAD0B,ECUf+C,G,MAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAM/C,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOgD,KAAK,SAAZ,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOF,KAAK,QAAQE,QAAS,cAAC,EAAD,SAG/B,cAAC,IAAD,CAAOF,KAAK,OAAOE,QAAS,cAAC,IAAD,CAAUpD,GAAG,IAAIqD,SAAO,MACpD,cAAC,IAAD,CAAOH,KAAK,IAAIE,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOF,KAAK,IAAIE,QAAS,cAAC,EAAD,eAdhB,GCFnBE,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.6dd19942.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  title: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, title }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const Navigation: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" title=\"Home\" />\n        <PageNavLink to=\"people\" title=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <NavLink\n    to={`/people/${person.slug}`}\n    className={classNames({ 'has-text-danger': person.sex === 'f' })}\n  >\n    {person.name}\n  </NavLink>\n);\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug: activeSlug } = useParams();\n\n  const findParent = (parentName: string | null) => {\n    const parent = people.find(person => person.name === parentName);\n\n    return parent\n      ? <PersonLink person={parent} />\n      : parentName || '-';\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex, born, died, motherName, fatherName, slug,\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              className={classNames(\n                { 'has-background-warning': slug === activeSlug },\n              )}\n              key={person.slug}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>{findParent(motherName)}</td>\n              <td>{findParent(fatherName)}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(peopleFromServer => setPeople(peopleFromServer))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(!isError && !people.length && !isLoading) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!!people.length && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}